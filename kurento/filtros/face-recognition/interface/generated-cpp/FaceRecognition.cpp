/* Autogenerated with kurento-module-creator */

#include "FaceRecognition.hpp"
#include <mutex>

namespace kurento
{
namespace module
{
namespace facerecognition
{

static std::vector<std::string> hierarchyFaceRecognition;
std::once_flag initFlagFaceRecognition;

static void
initHierarchy ()
{
  hierarchyFaceRecognition.emplace_back("kurento.OpenCVFilter");
  hierarchyFaceRecognition.emplace_back("kurento.Filter");
  hierarchyFaceRecognition.emplace_back("kurento.MediaElement");
  hierarchyFaceRecognition.emplace_back("kurento.MediaObject");
}

const std::vector<std::string> &
FaceRecognition::getHierarchy () const
{
  std::call_once (initFlagFaceRecognition,initHierarchy);
  return hierarchyFaceRecognition;
}

const std::string&
FaceRecognition::getType () const {
  static std::string typeName = "FaceRecognition";

  return typeName;
}

const std::string&
FaceRecognition::getQualifiedType () const {
  static std::string qualifiedTypeName = getModule() + "." + getType();

  return qualifiedTypeName;
}

const std::string&
FaceRecognition::getModule () const {
  static std::string moduleName =  "facerecognition";

  return moduleName;
}

} /* facerecognition */
} /* module */
} /* kurento */
