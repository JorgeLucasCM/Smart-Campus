/* Autogenerated with kurento-module-creator */

#include <gst/gst.h>
#include "MediaPipeline.hpp"
#include <MaskDetectionImplFactory.hpp>
#include "MaskDetectionImpl.hpp"
#include <jsonrpc/JsonSerializer.hpp>
#include <KurentoException.hpp>
#include "MediaPipelineImpl.hpp"

#define GST_CAT_DEFAULT kurento_mask_detection_impl
GST_DEBUG_CATEGORY_STATIC (GST_CAT_DEFAULT);
#define GST_DEFAULT_NAME "KurentoMaskDetectionImpl"

namespace kurento
{
namespace module
{
namespace maskdetection
{

MaskDetectionImpl::MaskDetectionImpl (const boost::property_tree::ptree &config, std::shared_ptr<MediaPipeline> mediaPipeline) : OpenCVFilterImpl (config, std::dynamic_pointer_cast<MediaPipelineImpl> (mediaPipeline) )

{
}

MediaObjectImpl *
MaskDetectionImplFactory::createObject (const boost::property_tree::ptree &config, std::shared_ptr<MediaPipeline> mediaPipeline) const
{
  return new MaskDetectionImpl (config, mediaPipeline);
}

MaskDetectionImpl::StaticConstructor MaskDetectionImpl::staticConstructor;

MaskDetectionImpl::StaticConstructor::StaticConstructor()
{
  GST_DEBUG_CATEGORY_INIT (GST_CAT_DEFAULT, GST_DEFAULT_NAME, 0,
                           GST_DEFAULT_NAME);
}

void MaskDetectionImpl::setConfig(const std::string &path)
{
    MaskDetectionOpenCVImpl::setConfig(path);
}

} /* maskdetection */
} /* module */
} /* kurento */
