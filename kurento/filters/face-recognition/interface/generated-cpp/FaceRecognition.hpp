/* Autogenerated with kurento-module-creator */

#ifndef __FACE_RECOGNITION_HPP__
#define __FACE_RECOGNITION_HPP__

#include <json/json.h>
#include <jsonrpc/JsonRpcException.hpp>
#include <memory>
#include <vector>
#include "OpenCVFilter.hpp"
#include "IdPerson.hpp"
#include <sigc++/sigc++.h>

namespace kurento
{
namespace module
{
namespace facerecognition
{
class FaceRecognition;
} /* facerecognition */
} /* module */
} /* kurento */

namespace kurento
{
class JsonSerializer;
void Serialize (std::shared_ptr<kurento::module::facerecognition::FaceRecognition> &object, JsonSerializer &serializer);
}

namespace kurento
{
class MediaPipeline;
} /* kurento */

namespace kurento
{
namespace module
{
namespace facerecognition
{
class FaceRecognition : public virtual OpenCVFilter
{

public:
  FaceRecognition() = default;
  ~FaceRecognition() override = default;


  virtual void setConfig (const std::string &path, int opFilter, const std::string &newPerson) = 0;

  const std::string &getType() const override;
  const std::string &getQualifiedType() const override;
  const std::string &getModule() const override;
  const std::vector<std::string> &getHierarchy() const override;

  void Serialize(JsonSerializer &serializer) override = 0;

};

} /* facerecognition */
} /* module */
} /* kurento */

#endif /*  __FACE_RECOGNITION_HPP__ */
